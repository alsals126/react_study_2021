{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uC624\\uC815\\uBBFC(2021\\uB144)\\\\3\\uD559\\uB144\\\\\\uB9AC\\uC561\\uD2B8\\\\react_study1\\\\src\\\\component-intermediate\\\\lifecycle-method-component-did-update.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddColor = color => {\n      console.log(color);\n      this.setState(state => {\n        return {\n          savedColors: state.savedColors.concat(color)\n        };\n      });\n    };\n\n    this.state = {\n      savedColors: [],\n      showColorBox: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.savedColors.map((color, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100px',\n            height: '100px',\n            background: color,\n            display: 'inline'\n          },\n          children: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 32\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState(state => ({\n          showColorBox: !state.showColorBox\n        })),\n        children: \"toggle color box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), this.state.showColorBox ? /*#__PURE__*/_jsxDEV(RandomColorBoxWithTimer, {\n        time: 5,\n        handleAddColor: this.handleAddColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 45\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass RandomColorBoxWithTimer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateRandomColor = () => \"#000000\".replace(/0/g, function () {\n      return (~~(Math.random() * 16)).toString(16);\n    });\n\n    this.showNewColor = () => {\n      this.setState({\n        color: this.generateRandomColor()\n      });\n    };\n\n    this.resetTimerWithNewColor = () => {\n      clearInterval(this.state.intervalId);\n      this.state.intervalId = setInterval(() => {\n        console.log('from setInterval');\n        this.setState(state => {\n          return {\n            time: state.time - 1\n          };\n        });\n      }, 1000);\n      this.showNewColor();\n      this.setState(state => {\n        return {\n          time: this.props.time\n        };\n      });\n    };\n\n    this.state = {\n      color: this.generateRandomColor(),\n      time: this.props.time,\n      intervalId: null\n    };\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.state.intervalId = setInterval(() => {\n      console.log('from setInterval');\n      this.setState(state => {\n        return {\n          time: state.time - 1\n        };\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate'); // 지금 props, state 정보가 필요한 경우 this.props, this.state 값 접근\n\n    if (this.state.time === 0) {\n      this.resetTimerWithNewColor();\n    }\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB0A8\\uC740 \\uC2DC\\uAC04 : \", this.state.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC0C9\\uC0C1 : \", this.state.color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100px',\n          height: '100px',\n          background: `${this.state.color}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetTimerWithNewColor,\n        children: \"next color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.handleAddColor(this.state.color);\n        },\n        children: \"save color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 117,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/오정민(2021년)/3학년/리액트/react_study1/src/component-intermediate/lifecycle-method-component-did-update.js"],"names":["React","Component","ReactDOM","Container","constructor","props","handleAddColor","color","console","log","setState","state","savedColors","concat","showColorBox","render","map","idx","width","height","background","display","RandomColorBoxWithTimer","generateRandomColor","replace","Math","random","toString","showNewColor","resetTimerWithNewColor","clearInterval","intervalId","setInterval","time","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass Container extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            savedColors: [],\r\n            showColorBox: true\r\n        }\r\n    }\r\n\r\n    handleAddColor = (color) => {\r\n        console.log(color)\r\n        this.setState(state => {\r\n            return {\r\n                savedColors: state.savedColors.concat(color)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.savedColors.map((color, idx) => {\r\n                        return <div style={{ width:'100px', height: '100px', background: color, display: 'inline' }}>{color}</div>\r\n                    })\r\n                }\r\n                <br />\r\n                <button onClick={() => this.setState(state => ({ showColorBox: !state.showColorBox }))}>toggle color box</button>\r\n                { this.state.showColorBox ? <RandomColorBoxWithTimer time={5} handleAddColor={this.handleAddColor} /> : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass RandomColorBoxWithTimer extends Component {\r\n    generateRandomColor = () => \"#000000\".replace(/0/g,function(){return (~~(Math.random()*16)).toString(16)})\r\n\r\n    showNewColor = () => {\r\n        this.setState({ color: this.generateRandomColor() })\r\n    }\r\n\r\n    resetTimerWithNewColor = () => {\r\n        clearInterval(this.state.intervalId)\r\n        this.state.intervalId = setInterval(() => {\r\n            console.log('from setInterval')\r\n\r\n            this.setState(state => {\r\n                return { time: state.time - 1 }\r\n            })\r\n        }, 1000)\r\n\r\n        this.showNewColor()\r\n        this.setState(state => {\r\n            return { time: this.props.time }\r\n        })\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            color: this.generateRandomColor(),\r\n            time: this.props.time,\r\n            intervalId: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount')\r\n\r\n        this.state.intervalId = setInterval(() => {\r\n            console.log('from setInterval')\r\n\r\n            this.setState(state => {\r\n                return { time: state.time - 1 }\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate')\r\n\r\n        // 지금 props, state 정보가 필요한 경우 this.props, this.state 값 접근\r\n        if(this.state.time === 0) {\r\n            this.resetTimerWithNewColor()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount')\r\n\r\n        clearInterval(this.state.intervalId)\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n\r\n        return (\r\n            <div>\r\n                <p>남은 시간 : {this.state.time}</p>\r\n                <p>색상 : {this.state.color}</p>\r\n                <div style={{ width: '100px', height: '100px', background: `${this.state.color}` }}>\r\n                </div>\r\n                <button onClick={ this.resetTimerWithNewColor }>next color</button>\r\n                <button onClick={() => {\r\n                    this.props.handleAddColor(this.state.color)\r\n                }}>save color</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Container />, document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}