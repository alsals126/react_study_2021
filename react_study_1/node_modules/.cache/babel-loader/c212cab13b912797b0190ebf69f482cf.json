{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uC624\\uC815\\uBBFC(2021\\uB144)\\\\3\\uD559\\uB144\\\\\\uB9AC\\uC561\\uD2B8\\\\react_study1\\\\src\\\\component-intermediate\\\\shallow-merge-caveat.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShallowMergeDemo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.brokenUpdate = () => {\n      // 중첩 객체의 내용을 변경할 경우, setState 메소드는 얕은 병합(shallow merge)을 수행하므로 한 단계 더 들어간 중첩 객체 내용은 대체(replace)되어 버리는 현상이 발생함\n      this.setState({\n        address: {\n          street: \"new street info\"\n        }\n      });\n    };\n\n    this.normalUpdate = () => {\n      // 이전 상태를 전달받도록 콜백 함수 전달 후,\n      this.setState(state => {\n        // 중첩 객체의 상태를 전개 문법(spread syntax)를 이용해서 복사한 후, 새 값을 대입하는 식으로 수동 merge 작업 수행이 필요\n        return {\n          address: { ...state.address,\n            street: \"new street info\"\n          }\n        };\n      });\n    };\n\n    this.normalUpdateInner = () => {\n      // Q) nestedInner 객체의 text를 \"World\"로 변경하되, inner 내부의 데이터를 모두 온전히 보존할 수 있도록 수정하게 코드 작성\n      this.setState(state => {\n        return {\n          address: { ...state.address\n          },\n          inner: { ...state.inner,\n            text: \"World\"\n          }\n        };\n      });\n    };\n\n    this.state = {\n      name: \"John\",\n      age: 20,\n      address: {\n        city: \"New York\",\n        street: \"20 W 34th St\"\n      },\n      inner: {\n        data1: 1000,\n        data2: 2000,\n        nestedInner: {\n          data3: 2000,\n          data4: 3000,\n          text: \"Hello\"\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(this.state)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.brokenUpdate,\n        children: \"broken update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 75\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.normalUpdate,\n        children: \"normal update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 75\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.normalUpdateInner,\n        children: \"normal update inner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ShallowMergeDemo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/오정민(2021년)/3학년/리액트/react_study1/src/component-intermediate/shallow-merge-caveat.js"],"names":["React","Component","ReactDOM","ShallowMergeDemo","constructor","props","brokenUpdate","setState","address","street","normalUpdate","state","normalUpdateInner","inner","text","name","age","city","data1","data2","nestedInner","data3","data4","render","JSON","stringify","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,YAtBmB,GAsBJ,MAAM;AACjB;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AADC,OAAd;AAGH,KA3BkB;;AAAA,SA6BnBC,YA7BmB,GA6BJ,MAAM;AACjB;AACA,WAAKH,QAAL,CAAeI,KAAK,IAAI;AACpB;AACA,eAAO;AACHH,UAAAA,OAAO,EAAE,EACL,GAAGG,KAAK,CAACH,OADJ;AAELC,YAAAA,MAAM,EAAE;AAFH;AADN,SAAP;AAMH,OARD;AASH,KAxCkB;;AAAA,SA0CnBG,iBA1CmB,GA0CC,MAAM;AACtB;AACA,WAAKL,QAAL,CAAeI,KAAK,IAAI;AACpB,eAAO;AACHH,UAAAA,OAAO,EAAE,EACL,GAAGG,KAAK,CAACH;AADJ,WADN;AAIHK,UAAAA,KAAK,EAAE,EACH,GAAGF,KAAK,CAACE,KADN;AAEHC,YAAAA,IAAI,EAAE;AAFH;AAJJ,SAAP;AASH,OAVD;AAWH,KAvDkB;;AAGf,SAAKH,KAAL,GAAa;AACTI,MAAAA,IAAI,EAAE,MADG;AAETC,MAAAA,GAAG,EAAE,EAFI;AAGTR,MAAAA,OAAO,EAAE;AACLS,QAAAA,IAAI,EAAE,UADD;AAELR,QAAAA,MAAM,EAAE;AAFH,OAHA;AAOTI,MAAAA,KAAK,EAAE;AACHK,QAAAA,KAAK,EAAE,IADJ;AAEHC,QAAAA,KAAK,EAAE,IAFJ;AAGHC,QAAAA,WAAW,EAAE;AACTC,UAAAA,KAAK,EAAE,IADE;AAETC,UAAAA,KAAK,EAAE,IAFE;AAGTR,UAAAA,IAAI,EAAE;AAHG;AAHV;AAPE,KAAb;AAiBH;;AAqCDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,kBAAIC,IAAI,CAACC,SAAL,CAAe,KAAKd,KAApB;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKL,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAE8D;AAAA;AAAA;AAAA;AAAA,cAF9D,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKI,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAG8D;AAAA;AAAA;AAAA;AAAA,cAH9D,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKE,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAnEoC;;AAsEzCV,QAAQ,CAACqB,MAAT,eAAgB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAsCG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAtC","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass ShallowMergeDemo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: \"John\",\r\n            age: 20,\r\n            address: {\r\n                city: \"New York\",\r\n                street: \"20 W 34th St\"\r\n            },\r\n            inner: {\r\n                data1: 1000,\r\n                data2: 2000,\r\n                nestedInner: {\r\n                    data3: 2000,\r\n                    data4: 3000,\r\n                    text: \"Hello\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    brokenUpdate = () => {\r\n        // 중첩 객체의 내용을 변경할 경우, setState 메소드는 얕은 병합(shallow merge)을 수행하므로 한 단계 더 들어간 중첩 객체 내용은 대체(replace)되어 버리는 현상이 발생함\r\n        this.setState({\r\n            address: { street: \"new street info\" }\r\n        })\r\n    }\r\n\r\n    normalUpdate = () => {\r\n        // 이전 상태를 전달받도록 콜백 함수 전달 후,\r\n        this.setState( state => {\r\n            // 중첩 객체의 상태를 전개 문법(spread syntax)를 이용해서 복사한 후, 새 값을 대입하는 식으로 수동 merge 작업 수행이 필요\r\n            return {\r\n                address: {\r\n                    ...state.address,\r\n                    street: \"new street info\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    normalUpdateInner = () => {\r\n        // Q) nestedInner 객체의 text를 \"World\"로 변경하되, inner 내부의 데이터를 모두 온전히 보존할 수 있도록 수정하게 코드 작성\r\n        this.setState( state => {\r\n            return {\r\n                address: {\r\n                    ...state.address\r\n                },\r\n                inner: {\r\n                    ...state.inner,\r\n                    text: \"World\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{JSON.stringify(this.state)}</p>\r\n                <button onClick={this.brokenUpdate}>broken update</button><br />\r\n                <button onClick={this.normalUpdate}>normal update</button><br />\r\n                <button onClick={this.normalUpdateInner}>normal update inner</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<ShallowMergeDemo />, document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}