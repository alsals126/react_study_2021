{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uC624\\uC815\\uBBFC(2021\\uB144)\\\\3\\uD559\\uB144\\\\\\uB9AC\\uC561\\uD2B8\\\\react_study1\\\\src\\\\component-intermediate\\\\todo-app-demo.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoItem extends Component {\n  render() {\n    const {\n      completed,\n      text\n    } = this.props.todo; //비구조 할당\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: completed ? {\n            textDecoration: 'line-through'\n          } : null,\n          onClick: () => this.props.handleTodoStatusToggle(this.props.idx),\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.handleTodoRemove(this.props.idx),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ol : 정렬된 목록을 나타냄. 보통 숫자 목록으로 표현한다.\n// li : 목록의 항목을 나타냄.\n// <li key={idx}> : 목록의 id를 \n\n\nclass TodoList extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: this.props.todos.map((todo, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(TodoItem, {\n            idx: idx,\n            todo: todo,\n            handleTodoStatusToggle: this.props.handleTodoStatusToggle,\n            handleTodoRemove: this.props.handleTodoRemove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TodoAdder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      //화살표 함수를 쓰는게 유지보수할 때 좋다\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.state = {\n      input: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.handleTodoAdd({\n            completed: false,\n            text: this.state.input\n          });\n          this.setState({\n            input: ''\n          }); // 빈 입력창\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props); // 반드시 \"생성자 함수 내부\"에서 상태 초기화 진행\n    // props와는 다르게 state는 변경 가능함을 유의 (단, setState 메소드를 이용하여 변경)\n\n    this.handleTodoAdd = newTodo => {\n      this.setState(state => ({\n        todos: state.todos.concat(newTodo)\n      }));\n    };\n\n    this.handleTodoStatusToggle = todoIndex => {\n      this.setState(state => ({\n        todos: state.todos.map((todo, idx) => {\n          if (idx === todoIndex) {\n            return { ...todo,\n              completed: !todo.completed\n            };\n          }\n\n          return todo;\n        })\n      }));\n    };\n\n    this.handleTodoRemove = todoIndex => {\n      this.setState(state => ({\n        todos: state.todos.filter((_, idx) => {\n          return idx !== todoIndex;\n        })\n      }));\n    };\n\n    this.state = {\n      todos: [{\n        completed: false,\n        text: '리액트 공부하기'\n      }, {\n        completed: true,\n        text: 'ES6 문법 공부하기'\n      }]\n    };\n  } // concat : 문자열 합치기\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TodoList, {\n        todos: this.state.todos,\n        handleTodoStatusToggle: this.handleTodoStatusToggle //메서드\n        ,\n        handleTodoRemove: this.handleTodoRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoAdder, {\n        handleTodoAdd: this.handleTodoAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 132,\n  columnNumber: 17\n}, this), rootElement); //ReactDOM.render(<TodoApp />, document.getElementById(\"root\"))","map":{"version":3,"sources":["D:/오정민(2021년)/3학년/리액트/react_study1/src/component-intermediate/todo-app-demo.js"],"names":["React","Component","ReactDOM","TodoItem","render","completed","text","props","todo","textDecoration","handleTodoStatusToggle","idx","handleTodoRemove","TodoList","todos","map","TodoAdder","constructor","handleChange","e","setState","input","target","value","state","handleTodoAdd","TodoApp","newTodo","concat","todoIndex","filter","_","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass TodoItem extends Component {\r\n    render() {\r\n        const { completed, text } = this.props.todo //비구조 할당\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <span\r\n                        style={completed ? { textDecoration: 'line-through' } : null}\r\n                        onClick={() => this.props.handleTodoStatusToggle(this.props.idx)}>\r\n                        {text}\r\n                    </span>&nbsp;\r\n                    <button onClick={() => this.props.handleTodoRemove(this.props.idx)}>X</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// ol : 정렬된 목록을 나타냄. 보통 숫자 목록으로 표현한다.\r\n// li : 목록의 항목을 나타냄.\r\n// <li key={idx}> : 목록의 id를 \r\nclass TodoList extends Component {\r\n    render() {\r\n        return (\r\n            <ol>\r\n                {\r\n                    this.props.todos.map((todo, idx) => {\r\n                        return (\r\n                            <li key={idx}>\r\n                                <TodoItem\r\n                                    idx={idx}\r\n                                    todo={todo}\r\n                                    handleTodoStatusToggle={this.props.handleTodoStatusToggle}\r\n                                    handleTodoRemove={this.props.handleTodoRemove}/>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n        )\r\n    }\r\n}\r\n\r\nclass TodoAdder extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            input: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => { //화살표 함수를 쓰는게 유지보수할 때 좋다\r\n        this.setState({ input: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type='text' onChange={this.handleChange} value={this.state.input} />\r\n                <button onClick={() => {\r\n                    this.props.handleTodoAdd({ completed: false, text: this.state.input })\r\n                    this.setState({ input: '' }) // 빈 입력창\r\n                }}>Add</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TodoApp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // 반드시 \"생성자 함수 내부\"에서 상태 초기화 진행\r\n        // props와는 다르게 state는 변경 가능함을 유의 (단, setState 메소드를 이용하여 변경)\r\n        this.state = {\r\n            todos: [\r\n                { completed: false, text: '리액트 공부하기' },\r\n                { completed: true, text: 'ES6 문법 공부하기' },\r\n            ]\r\n        }\r\n    }\r\n\r\n    // concat : 문자열 합치기\r\n    handleTodoAdd = (newTodo) => {\r\n        this.setState((state) => ({\r\n            todos: state.todos.concat(newTodo)\r\n        }))\r\n    }\r\n\r\n    handleTodoStatusToggle = (todoIndex) => {\r\n        this.setState((state) => ({\r\n            todos: state.todos.map((todo, idx) => {\r\n                if(idx === todoIndex) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    }\r\n                }\r\n                return todo\r\n            })\r\n        }))\r\n    }\r\n\r\n    // 언더바는 관심이 없는걸 표현\r\n    handleTodoRemove = (todoIndex) => {\r\n        this.setState((state) => ({\r\n            todos: state.todos.filter((_, idx) => {\r\n                return idx !== todoIndex\r\n            })\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TodoList\r\n                    todos={this.state.todos}\r\n                    handleTodoStatusToggle={this.handleTodoStatusToggle} //메서드\r\n                    handleTodoRemove={this.handleTodoRemove}/>\r\n                <TodoAdder handleTodoAdd={this.handleTodoAdd} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\")\r\nReactDOM.render(<TodoApp />, rootElement)\r\n//ReactDOM.render(<TodoApp />, document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}