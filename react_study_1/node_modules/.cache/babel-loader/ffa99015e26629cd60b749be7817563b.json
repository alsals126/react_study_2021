{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uC624\\uC815\\uBBFC(2021\\uB144)\\\\3\\uD559\\uB144\\\\\\uB9AC\\uC561\\uD2B8\\\\react_study1\\\\src\\\\component-intermediate\\\\lifecycle-method-component-did-update.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showColorBox: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState(state => ({\n          showColorBox: !state.showColorBox\n        })),\n        children: \"toggle color box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), this.state.showColorBox ? /*#__PURE__*/_jsxDEV(RandomColorBoxWithTimer, {\n        time: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 45\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass RandomColorBoxWithTimer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateRandomColor = () => \"#000000\".replace(/0/g, function () {\n      return (~~(Math.random() * 16)).toString(16);\n    });\n\n    this.showNewColor = () => {\n      this.setState({\n        color: this.generateRandomColor()\n      });\n    };\n\n    this.resetTimerWithNewColor = () => {\n      clearInterval(this.state.intervalId);\n      this.state.intervalId = setInterval(() => {\n        console.log('from setInterval');\n        this.setState(state => {\n          return {\n            time: state.time - 1\n          };\n        });\n      }, 1000);\n      this.showNewColor();\n      this.setState(state => {\n        return {\n          time: this.props.time\n        };\n      });\n    };\n\n    this.state = {\n      color: this.generateRandomColor(),\n      time: this.props.time,\n      intervalId: null\n    };\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.state.intervalId = setInterval(() => {\n      console.log('from setInterval');\n      this.setState(state => {\n        return {\n          time: state.time - 1\n        };\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate'); // 지금 props, state 정보가 필요한 경우 this.props, this.state 값 접근\n\n    if (this.state.time === 0) {\n      this.resetTimerWithNewColor();\n    }\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB0A8\\uC740 \\uC2DC\\uAC04 : \", this.state.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC0C9\\uC0C1 : \", this.state.color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100px',\n          height: '100px',\n          background: `${this.state.color}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetTimerWithNewColor,\n        children: \"next color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/오정민(2021년)/3학년/리액트/react_study1/src/component-intermediate/lifecycle-method-component-did-update.js"],"names":["React","Component","ReactDOM","Container","constructor","props","state","showColorBox","render","setState","RandomColorBoxWithTimer","generateRandomColor","replace","Math","random","toString","showNewColor","color","resetTimerWithNewColor","clearInterval","intervalId","setInterval","console","log","time","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","width","height","background","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass Container extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { showColorBox: true }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={() => this.setState(state => ({ showColorBox: !state.showColorBox }))}>toggle color box</button>\r\n                { this.state.showColorBox ? <RandomColorBoxWithTimer time={5} /> : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass RandomColorBoxWithTimer extends Component {\r\n    generateRandomColor = () => \"#000000\".replace(/0/g,function(){return (~~(Math.random()*16)).toString(16)})\r\n\r\n    showNewColor = () => {\r\n        this.setState({ color: this.generateRandomColor() })\r\n    }\r\n\r\n    resetTimerWithNewColor = () => {\r\n        clearInterval(this.state.intervalId)\r\n        this.state.intervalId = setInterval(() => {\r\n            console.log('from setInterval')\r\n\r\n            this.setState(state => {\r\n                return { time: state.time - 1 }\r\n            })\r\n        }, 1000)\r\n\r\n        this.showNewColor()\r\n        this.setState(state => {\r\n            return { time: this.props.time }\r\n        })\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            color: this.generateRandomColor(),\r\n            time: this.props.time,\r\n            intervalId: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount')\r\n\r\n        this.state.intervalId = setInterval(() => {\r\n            console.log('from setInterval')\r\n\r\n            this.setState(state => {\r\n                return { time: state.time - 1 }\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate')\r\n\r\n        // 지금 props, state 정보가 필요한 경우 this.props, this.state 값 접근\r\n        if(this.state.time === 0) {\r\n            this.resetTimerWithNewColor()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount')\r\n\r\n        clearInterval(this.state.intervalId)\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n\r\n        return (\r\n            <div>\r\n                <p>남은 시간 : {this.state.time}</p>\r\n                <p>색상 : {this.state.color}</p>\r\n                <div style={{ width: '100px', height: '100px', background: `${this.state.color}` }}>\r\n                </div>\r\n                <button onClick={ this.resetTimerWithNewColor }>next color</button><br/>\r\n                <button>save</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Container />, document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}