{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uC624\\uC815\\uBBFC(2021\\uB144)\\\\3\\uD559\\uB144\\\\\\uB9AC\\uC561\\uD2B8\\\\react_study_1\\\\src\\\\\\uC218\\uD589\\uD3C9\\uAC00\\\\make-accordion-3112-ohjeongmin.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // npm install uuid\n\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListItem extends Component {\n  render() {\n    // 부모 컴포넌트로부터 전달받은 상태 변화 메소드 저장\n    const {\n      onRemove,\n      onUpdate\n    } = this.props;\n    const {\n      id,\n      value\n    } = this.props.item;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid black',\n        margin: '20px',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"id : \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"value : \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // 필요한 인자값(삭제할 id) 전달\n          onRemove(id);\n        },\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // 필요한 인자값(추가할 객체) 전달\n          onUpdate(id, {\n            id: id,\n            value: value + 1\n          });\n        },\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCreateItem = () => {\n      // create (concat)\n      this.setState(state => ({\n        // 새 항목을 추가한 \"새로운 참조를 가진\" 리스트로 교체\n        lst: state.lst.concat({\n          id: v4(),\n          value: 0\n        })\n      }));\n    };\n\n    this.handleRemoveItem = uuid => {\n      // remove (filter)\n      this.setState(state => ({\n        lst: state.lst.filter(item => {\n          // id가 일치할 경우 false 리턴하여 리스트에서 제외\n          return item.id !== uuid;\n        })\n      }));\n    };\n\n    this.handleUpdateItem = (uuid, updated) => {\n      // update (map)\n      this.setState(state => ({\n        lst: state.lst.map(item => {\n          // id가 일치할 경우\n          if (item.id === uuid) {\n            // 수정된 객체를 반환\n            return updated;\n          } else {\n            return item;\n          }\n        })\n      }));\n    };\n\n    this.state = {\n      lst: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleCreateItem,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.lst.map(item => {\n          // uuid => 데이터베이스에서 참조할 pk라고 가정\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              item: item,\n              onRemove: this.handleRemoveItem,\n              onUpdate: this.handleUpdateItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ListComponent, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/오정민(2021년)/3학년/리액트/react_study_1/src/수행평가/make-accordion-3112-ohjeongmin.js"],"names":["React","Component","ReactDOM","v4","ListItem","render","onRemove","onUpdate","props","id","value","item","border","margin","padding","ListComponent","constructor","handleCreateItem","setState","state","lst","concat","handleRemoveItem","uuid","filter","handleUpdateItem","updated","map","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// npm install uuid\r\nimport { v4 } from 'uuid'\r\n\r\nclass ListItem extends Component {\r\n    render() {\r\n        // 부모 컴포넌트로부터 전달받은 상태 변화 메소드 저장\r\n        const { onRemove, onUpdate } = this.props\r\n        const { id, value } = this.props.item\r\n\r\n        return (\r\n            <div style={{ border: '1px solid black', margin: '20px', padding: '20px' }}>\r\n                <span>id : {id}</span><br />\r\n                <span>value : {value}</span><br />\r\n                {/* 화살표 함수를 전달하여, 부모로 부터 전달받은 상태 변화 메소드(onRemove) 호출 */}\r\n                <button onClick={\r\n                    () => {\r\n                        // 필요한 인자값(삭제할 id) 전달\r\n                        onRemove(id)\r\n                    }\r\n                }>remove</button>&nbsp;\r\n                <button onClick={\r\n                    () => {\r\n                        // 필요한 인자값(추가할 객체) 전달\r\n                        onUpdate(id, { id: id, value: value + 1 })\r\n                    }\r\n                }>update</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ListComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { lst: [] }\r\n    }\r\n\r\n    handleCreateItem = () => {\r\n        // create (concat)\r\n        this.setState((state) => ({\r\n            // 새 항목을 추가한 \"새로운 참조를 가진\" 리스트로 교체\r\n            lst: state.lst.concat({ id: v4(), value: 0 })\r\n        }))\r\n\r\n    }\r\n\r\n    handleRemoveItem = (uuid) => {\r\n        // remove (filter)\r\n        this.setState((state) => ({\r\n            lst: state.lst.filter((item) => {\r\n                // id가 일치할 경우 false 리턴하여 리스트에서 제외\r\n                return item.id !== uuid\r\n            })\r\n        }))\r\n    }\r\n\r\n    handleUpdateItem = (uuid, updated) => {\r\n        // update (map)\r\n        this.setState((state) => ({\r\n            lst: state.lst.map((item) => {\r\n                // id가 일치할 경우\r\n                if(item.id === uuid) {\r\n                    // 수정된 객체를 반환\r\n                    return updated\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleCreateItem}>add</button>\r\n                <ul>\r\n                    {\r\n                        this.state.lst.map(item => {\r\n                            // uuid => 데이터베이스에서 참조할 pk라고 가정\r\n                            return <li key={item.id}>\r\n                                <ListItem\r\n                                    item={item}\r\n                                    onRemove={this.handleRemoveItem}\r\n                                    onUpdate={this.handleUpdateItem}/>\r\n                            </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<ListComponent />, document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}