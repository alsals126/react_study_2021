{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uC624\\uC815\\uBBFC(2021\\uB144)\\\\3\\uD559\\uB144\\\\\\uB9AC\\uC561\\uD2B8\\\\react_study_1\\\\src\\\\\\uC218\\uD589\\uD3C9\\uAC00\\\\2\\uD559\\uAE30\\\\make-arrcordion-hook-teacher.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport ReactDOM from 'react-dom';\n/*\r\nfunction SingleAccordion() {\r\n    const [state, setState] = useState({\r\n        title: '제목',\r\n        content: '내용',\r\n        expanded: false\r\n    })\r\n\r\n    return <div>\r\n        <div onClick={() => { setState(state => ({ ...state,expanded : !state.expanded })) }}>{state.title}</div>\r\n        {\r\n            state.expanded ? <div>{state.content}</div> : null\r\n        }\r\n    </div>\r\n}\r\n\r\nReactDOM.render(<SingleAccordion />, document.getElementById(\"root\"))\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const [keyword, setKeyword] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: keyword,\n      onChange: e => {\n        setKeyword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.handleSubmit(keyword),\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"Spc9aTC4h+uoD4yIDnlnMjpTYMA=\");\n\n_c = Search;\n\nconst WikiSearchApp = props => {\n  _s2();\n\n  const [searchData, setSearchData] = useState(null);\n\n  const handleSubmit = keyword => {\n    // alert(keyword);\n    fetch(`https://en.wikipedia.org/w/api.php?origin=*&action=opensearch&search=${keyword}`).then(res => res.json()).then(data => {\n      setSearchData(data);\n    });\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"no search result\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 19\n  }, this);\n\n  if (searchData !== null) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchData[1].map((title, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: searchData[3][idx],\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSubmit: handleSubmit,\n      label: \"\\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(WikiSearchApp, \"sSkZ9HoaTqplTLnel//05C/NWH8=\");\n\n_c2 = WikiSearchApp;\nReactDOM.render( /*#__PURE__*/_jsxDEV(WikiSearchApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"WikiSearchApp\");","map":{"version":3,"sources":["D:/오정민(2021년)/3학년/리액트/react_study_1/src/수행평가/2학기/make-arrcordion-hook-teacher.js"],"names":["React","Component","useState","ReactDOM","Search","props","keyword","setKeyword","e","target","value","handleSubmit","label","WikiSearchApp","searchData","setSearchData","fetch","then","res","json","data","content","map","title","idx","render","document","getElementById"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEI,OAA1B;AAAmC,MAAA,QAAQ,EAAGE,CAAD,IAAO;AAChDD,QAAAA,UAAU,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAML,KAAK,CAACM,YAAN,CAAmBL,OAAnB,CAAvB;AAAA,gBAAqDD,KAAK,CAACO;AAA3D;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVD;;GAAMR,M;;KAAAA,M;;AAYN,MAAMS,aAAa,GAAIR,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C;;AACA,QAAMS,YAAY,GAAIL,OAAD,IAAa;AAC9B;AACAU,IAAAA,KAAK,CAAE,wEAAuEV,OAAQ,EAAjF,CAAL,CACKW,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVL,MAAAA,aAAa,CAACK,IAAD,CAAb;AACH,KAJL;AAKH,GAPD;;AAQA,MAAIC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAGP,UAAU,KAAK,IAAlB,EAAwB;AACpBO,IAAAA,OAAO,gBACH;AAAA,6BACI;AAAA,kBACKP,UAAU,CAAC,CAAD,CAAV,CAAcQ,GAAd,CAAmB,CAACC,KAAD,EAAQC,GAAR,kBAChB;AAAA,iCACI;AAAG,YAAA,IAAI,EAAEV,UAAU,CAAC,CAAD,CAAV,CAAcU,GAAd,CAAT;AAAA,sBAA8BD;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AACD,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEZ,YAAtB;AAAoC,MAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKU,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA9BD;;IAAMR,a;;MAAAA,a;AAgCNV,QAAQ,CAACsB,MAAT,eAAgB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAmCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnC","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n/*\r\nfunction SingleAccordion() {\r\n    const [state, setState] = useState({\r\n        title: '제목',\r\n        content: '내용',\r\n        expanded: false\r\n    })\r\n\r\n    return <div>\r\n        <div onClick={() => { setState(state => ({ ...state,expanded : !state.expanded })) }}>{state.title}</div>\r\n        {\r\n            state.expanded ? <div>{state.content}</div> : null\r\n        }\r\n    </div>\r\n}\r\n\r\nReactDOM.render(<SingleAccordion />, document.getElementById(\"root\"))\r\n*/\r\n\r\nconst Search = (props) => {\r\n    const [keyword, setKeyword] = useState('')\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={keyword} onChange={(e) => {\r\n                setKeyword(e.target.value);\r\n            }} />\r\n            <button onClick={() => props.handleSubmit(keyword)}>{props.label}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WikiSearchApp = (props) => {\r\n    const [searchData, setSearchData] = useState(null)\r\n    const handleSubmit = (keyword) => {\r\n        // alert(keyword);\r\n        fetch(`https://en.wikipedia.org/w/api.php?origin=*&action=opensearch&search=${keyword}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setSearchData(data);\r\n            })\r\n    }\r\n    let content = <h1>no search result</h1>\r\n    if(searchData !== null) {\r\n        content = (\r\n            <div>\r\n                <ul>\r\n                    {searchData[1].map( (title, idx) => (\r\n                        <li>\r\n                            <a href={searchData[3][idx]}>{title}</a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Search handleSubmit={handleSubmit} label=\"찾기\" />\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<WikiSearchApp />, document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}