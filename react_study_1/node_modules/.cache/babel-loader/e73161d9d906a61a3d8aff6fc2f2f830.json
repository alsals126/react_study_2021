{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\3\\uD559\\uB144\\\\\\uB9AC\\uC561\\uD2B8\\\\react_study1\\\\src\\\\component-basic\\\\props-basic-1.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ComponentWithProps extends Component {\n  // 리액트할 때(컴포넌트 상속받을 때) 생성자 생성(+부모생성자 호출) 필수!\n  constructor(props) {\n    //<ComponentWithProps value=\"Hello\" asdf=\"World\"/> 속성(value, asdf)들을 생성자를 통해 전달함\n    super(props); //부모생성자 호출\n\n    console.log(props); // this.props.value = \"Modify\" //수정이 불가능하고, 하면 안된다. (읽기 전용이기 때문이다)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.asdf.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nclass ComponentWithMultipleProps extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n  render() {\n    // 객체 비구조 할당 사용 idiom\n    const {\n      value1,\n      value2,\n      whatever\n    } = this.props;\n    /*\r\n    return (\r\n        <>\r\n            <p>{this.props.value1}</p>\r\n            <p>{this.props.value2}</p>\r\n            <p>{this.props.whatever}</p>\r\n        </>\r\n    )\r\n    */\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [value1, \" \", value2, \" \", whatever]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nclass PersonProfile extends Component {\n  render() {\n    const {\n      name,\n      age,\n      gender,\n      profile\n    } = this.props; // props 값은 수정 불가\n    // Cannot assign to read only property 'name' of object '#<Object>'\n    // this.props.name = 'Jane'\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person\",\n      style: this.props.highlight ? {\n        color: 'red'\n      } : null,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name : \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"age : \", age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"gender : \", gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst anotherPerson = {\n  name: 'Jane',\n  age: 28,\n  gender: 'female',\n  profile: 'https://randomuser.me/api/portraits/women/75.jpg'\n};\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(PersonProfile, {\n    name: \"John\",\n    age: 35,\n    gender: \"male\",\n    profile: \"https://randomuser.me/api/portraits/men/75.jpg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(PersonProfile, { ...anotherPerson\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 81,\n  columnNumber: 5\n}, this), document.getElementById(\"root\")); // <ComponentWithProps value=\"Hello\" asdf=\"World\"/> => 속성과 속성값 해주기\n//ReactDOM.render(<ComponentWithProps value=\"Hello\" asdf=\"World\"/>, document.getElementById(\"root\"))\n//ReactDOM.render(<ComponentWithMultipleProps value1=\"Hello\" value2=\"World\" whatever={1234} />, document.getElementById(\"root\"))\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(PersonProfile, {\n    name: \"John\",\n    age: 35,\n    gender: \"male\",\n    profile: \"https://randomuser.me/api/portraits/men/75.jpg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Samsung/Desktop/3학년/리액트/react_study1/src/component-basic/props-basic-1.js"],"names":["React","Component","Fragment","ReactDOM","ComponentWithProps","constructor","props","console","log","render","asdf","toString","ComponentWithMultipleProps","value1","value2","whatever","PersonProfile","name","age","gender","profile","highlight","color","anotherPerson","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass ComponentWithProps extends Component {\r\n    // 리액트할 때(컴포넌트 상속받을 때) 생성자 생성(+부모생성자 호출) 필수!\r\n    constructor(props) { //<ComponentWithProps value=\"Hello\" asdf=\"World\"/> 속성(value, asdf)들을 생성자를 통해 전달함\r\n        super(props) //부모생성자 호출\r\n\r\n        console.log(props)\r\n\r\n       // this.props.value = \"Modify\" //수정이 불가능하고, 하면 안된다. (읽기 전용이기 때문이다)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* 생성자를 통해 얻은 props를 this를 통해 접근한다.*/}\r\n                <p>{this.props.asdf.toString()}</p>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nclass ComponentWithMultipleProps extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        console.log(props)\r\n    }\r\n\r\n    render() {\r\n        // 객체 비구조 할당 사용 idiom\r\n        const { value1, value2, whatever } = this.props\r\n\r\n        /*\r\n        return (\r\n            <>\r\n                <p>{this.props.value1}</p>\r\n                <p>{this.props.value2}</p>\r\n                <p>{this.props.whatever}</p>\r\n            </>\r\n        )\r\n        */\r\n        return (\r\n            <>\r\n                <p>{value1} {value2} {whatever}</p>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nclass PersonProfile extends Component {\r\n    render() {\r\n        const { name, age, gender, profile } = this.props\r\n        // props 값은 수정 불가\r\n        // Cannot assign to read only property 'name' of object '#<Object>'\r\n        // this.props.name = 'Jane'\r\n\r\n        return (\r\n            <div\r\n                className='person'\r\n                style={this.props.highlight ? {color: 'red'} : null}>\r\n                <h1>Profile</h1>\r\n                <img src={profile} />\r\n                <p>name : {name}</p>\r\n                <p>age : {age}</p>\r\n                <p>gender : {gender}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst anotherPerson = {\r\n    name: 'Jane',\r\n    age: 28,\r\n    gender: 'female',\r\n    profile: 'https://randomuser.me/api/portraits/women/75.jpg'\r\n}\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <PersonProfile\r\n            name='John'\r\n            age={35}\r\n            gender='male'\r\n            profile='https://randomuser.me/api/portraits/men/75.jpg' />\r\n        <PersonProfile {...anotherPerson} />\r\n    </div>,\r\n    document.getElementById(\"root\"))\r\n\r\n// <ComponentWithProps value=\"Hello\" asdf=\"World\"/> => 속성과 속성값 해주기\r\n//ReactDOM.render(<ComponentWithProps value=\"Hello\" asdf=\"World\"/>, document.getElementById(\"root\"))\r\n\r\n//ReactDOM.render(<ComponentWithMultipleProps value1=\"Hello\" value2=\"World\" whatever={1234} />, document.getElementById(\"root\"))\r\nReactDOM.render(\r\n    <div>\r\n        <PersonProfile\r\n            name='John'\r\n            age={35}\r\n            gender='male'\r\n            profile='https://randomuser.me/api/portraits/men/75.jpg' />\r\n\r\n    </div>,\r\n    document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}