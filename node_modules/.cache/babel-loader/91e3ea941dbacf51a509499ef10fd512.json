{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\3\\uD559\\uB144\\\\\\uB9AC\\uC561\\uD2B8\\\\react_study1\\\\src\\\\jsx\\\\jsx-basic-1.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst name = 'Josh Perez'; // 변수 내용 삽입 가능\n\nconst element = /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: [\"Hello, \", name]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 17\n}, this);\n\nconst lst = [100, 200, 300]; //배열\n\nconst person = {\n  //객체\n  name: 'John',\n  age: 20\n};\n\nfunction double(value) {\n  //함수\n  return value * 2;\n}\n\nconst JSXwithExpressions = /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: [lst[0], \"\\xA0\", person.name, \"\\xA0\", person.age, \"\\xA0\", 2 + 2, \"\\xA0\", person.name.toUpperCase(), \"\\xA0\", person.name.length, \"\\xA0\", double(person.age)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this);\n\nconst age = 20;\n\nconst conditionalElement = /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: age >= 20 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC131\\uC778\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uBBF8\\uC131\\uB144\\uC790\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 36\n  }, this)\n}, void 0, false); //원래는 background-color인데 -로 인식되기 때문에 카멜 표기법으로 쓴다.\n\n\nconst cssObj = {\n  color: \"red\",\n  backgroundColor: \"blue\"\n};\n\nconst h1 = /*#__PURE__*/_jsxDEV(\"h1\", {\n  style: cssObj,\n  children: \"Hello Style!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 12\n}, this);\n\nconst h2 = /*#__PURE__*/_jsxDEV(\"h1\", {\n  style: {\n    color: \"red\"\n  },\n  children: \"Hello Style\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 12\n}, this); //인라인\n\n\nReactDOM.render(h1, document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Samsung/Desktop/3학년/리액트/react_study1/src/jsx/jsx-basic-1.js"],"names":["React","ReactDOM","name","element","lst","person","age","double","value","JSXwithExpressions","toUpperCase","length","conditionalElement","cssObj","color","backgroundColor","h1","h2","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,IAAI,GAAG,YAAb,C,CACA;;AACA,MAAMC,OAAO,gBAAG;AAAA,wBAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;;AAEA,MAAME,GAAG,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAZ,C,CAA4B;;AAC5B,MAAMC,MAAM,GAAG;AAAE;AACbH,EAAAA,IAAI,EAAE,MADK;AAEXI,EAAAA,GAAG,EAAE;AAFM,CAAf;;AAIA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAE;AACrB,SAAOA,KAAK,GAAG,CAAf;AACH;;AAED,MAAMC,kBAAkB,gBACpB;AAAA,aAGKL,GAAG,CAAC,CAAD,CAHR,UAIWC,MAAM,CAACH,IAJlB,UAKWG,MAAM,CAACC,GALlB,UAMW,IAAI,CANf,UAOWD,MAAM,CAACH,IAAP,CAAYQ,WAAZ,EAPX,UAQWL,MAAM,CAACH,IAAP,CAAYS,MARvB,UASWJ,MAAM,CAACF,MAAM,CAACC,GAAR,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAaA,MAAMA,GAAG,GAAG,EAAZ;;AACA,MAAMM,kBAAkB,gBACpB;AAAA,YAAGN,GAAG,IAAI,EAAP,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ,gBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/B,iBADJ,C,CAIA;;;AACA,MAAMO,MAAM,GAAG;AAACC,EAAAA,KAAK,EAAC,KAAP;AAAcC,EAAAA,eAAe,EAAG;AAAhC,CAAf;;AACA,MAAMC,EAAE,gBAAG;AAAI,EAAA,KAAK,EAAEH,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;;AACA,MAAMI,EAAE,gBAAG;AAAI,EAAA,KAAK,EAAE;AAACH,IAAAA,KAAK,EAAC;AAAP,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX,C,CAAsD;;;AAGtDb,QAAQ,CAACiB,MAAT,CAAgBF,EAAhB,EAAoBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst name = 'Josh Perez'\r\n// 변수 내용 삽입 가능\r\nconst element = <h1>Hello, {name}</h1>\r\n\r\nconst lst = [100, 200, 300] //배열\r\nconst person = { //객체\r\n    name: 'John',\r\n    age: 20\r\n}\r\nfunction double(value) { //함수\r\n    return value * 2\r\n}\r\n\r\nconst JSXwithExpressions = (\r\n    <h1>\r\n        {/*중괄호를 하고 주석달기*/}\r\n        {/* 밑에 처럼 변수, 배열 접근 가능 */}\r\n        {lst[0]}\r\n        &nbsp;{person.name}\r\n        &nbsp;{person.age}\r\n        &nbsp;{2 + 2}\r\n        &nbsp;{person.name.toUpperCase()}\r\n        &nbsp;{person.name.length}\r\n        &nbsp;{double(person.age)}\r\n    </h1>)\r\n\r\nconst age = 20\r\nconst conditionalElement = (\r\n    <>{age >= 20 ? <div>성인</div> : <div>미성년자</div>}</>\r\n)\r\n\r\n//원래는 background-color인데 -로 인식되기 때문에 카멜 표기법으로 쓴다.\r\nconst cssObj = {color:\"red\", backgroundColor : \"blue\"}\r\nconst h1 = <h1 style={cssObj}>Hello Style!</h1>\r\nconst h2 = <h1 style={{color:\"red\"}}>Hello Style</h1> //인라인\r\n\r\n\r\nReactDOM.render(h1, document.getElementById(\"root\"))\r\n"]},"metadata":{},"sourceType":"module"}